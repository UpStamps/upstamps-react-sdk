{"version":3,"file":"upstamps-react.cjs.development.js","sources":["../src/constants.ts","../src/Context.tsx","../src/useUpstampsContext.tsx","../src/useFlag.tsx","../src/Flag.tsx"],"sourcesContent":["export const apiUrl: string = \"https://services.upstamps.com/api\";\n","import React, { createContext, useEffect, useReducer, useMemo } from \"react\";\n//Constants\nimport { apiUrl } from \"./constants\";\n\nexport interface UpStampsConfigParams {\n  clientId: string;\n  envKey: string;\n  projectKey: string;\n}\n\nexport interface UpStampsState {\n  loading: boolean;\n  error: boolean;\n  flags: Array<string>;\n  params: UpStampsConfigParams;\n}\n\nexport interface UpStampsContextState {\n  state: UpStampsState;\n}\n\nexport interface UpStampsProviderProps extends UpStampsConfigParams {\n  children: React.ReactNode;\n}\n\nexport type ReducerSetFlags = {\n  type: \"set-flags\";\n  payload: {\n    flags: Array<string>;\n    loading: boolean;\n  };\n};\n\nexport type ReducerSetFlagsError = {\n  type: \"set-flags-error\";\n  payload: {\n    error: boolean;\n    loading: boolean;\n  };\n};\n\nexport type ReducerActions = ReducerSetFlags | ReducerSetFlagsError;\n\nexport const UpStampsContext = createContext<UpStampsContextState>(\n  {} as UpStampsContextState\n);\n\nlet reducer = (state: UpStampsState, action: ReducerActions) => {\n  switch (action.type) {\n    case \"set-flags\":\n      return { ...state, ...action.payload };\n    case \"set-flags-error\":\n      return { ...state, ...action.payload };\n\n    default:\n      throw new Error(`Unhandled action type`);\n  }\n};\n\nexport const UpStampsProvider: React.FC<UpStampsProviderProps> = ({\n  children,\n  clientId,\n  envKey,\n  projectKey,\n}) => {\n  const params = {\n    clientId,\n    envKey,\n    projectKey,\n  };\n\n  const [state, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: false,\n    flags: [],\n    params,\n  });\n\n  const value = useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n  useEffect(() => {\n    let ignore = false;\n    const onFetchFlags = async () => {\n      try {\n        //If the flags are collected, do not fetch again\n        if (state.flags.length > 0) return;\n        //Service Url\n        const url = `${apiUrl}/flags/${clientId}/${projectKey}/${envKey}`;\n\n        //Response with the all the flags\n        const response = await fetch(url);\n        const { flags } = await response.json();\n\n        //Filters flags a creates a simple array\n        const data = flags.map((item: { name: string }) => item.name);\n\n        //Updates the state with the flags\n        if (!ignore) {\n          dispatch({\n            type: \"set-flags\",\n            payload: { flags: data, loading: false },\n          });\n        }\n      } catch (e) {\n        dispatch({\n          type: \"set-flags-error\",\n          payload: { loading: false, error: true },\n        });\n      }\n    };\n    onFetchFlags();\n    return () => {\n      ignore = true;\n    };\n  }, [state.flags, clientId, envKey, projectKey]);\n\n  return (\n    <UpStampsContext.Provider value={value}>\n      {children}\n    </UpStampsContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { UpStampsContext } from \"./Context\";\n\nconst useUpStampsContext = () => {\n  const context = useContext(UpStampsContext);\n  if (context === undefined) {\n    throw new Error(\"UpStampsContext must be used with UpStampsProvider!\");\n  }\n  return context;\n};\n\nexport default useUpStampsContext;\n","import { useMemo } from \"react\";\nimport useUpstampsContext from \"./useUpstampsContext\";\n\nexport const useFlag = (name: string) => {\n  const { state } = useUpstampsContext();\n  const flags = useMemo(() => state.flags, [state.flags]);\n\n  console.log(\"-------\");\n  console.log(\"Render = \", flags);\n\n  return {\n    show: flags.indexOf(name) !== -1,\n  } as const;\n};\n","import React, { Fragment, useMemo } from \"react\";\nimport useUpstampsContext from \"./useUpstampsContext\";\n\nexport interface FlagProps {\n  children: React.ReactNode;\n  name: string;\n}\n\nexport const Flag: React.FC<FlagProps> = ({ children, name }) => {\n  const { state } = useUpstampsContext();\n  const show = useMemo(() => state.flags.indexOf(name) !== -1, [state.flags]);\n\n  //Hide the feature\n  if (!show) return null;\n\n  return <Fragment>{children}</Fragment>;\n};\n"],"names":["apiUrl","UpStampsContext","createContext","reducer","state","action","type","payload","Error","UpStampsProvider","_a","children","clientId","envKey","projectKey","params","_b","dispatch","value","useMemo","useEffect","ignore","onFetchFlags","flags","length","url","fetch","response","json","data","map","item","name","loading","error","React","Provider","useUpStampsContext","context","useContext","undefined","useFlag","console","log","show","indexOf","Flag","Fragment"],"mappings":";;;;;;;;;;AAAO,IAAMA,MAAM,GAAW,mCAAvB;;IC2CMC,eAAe;AAAA;AAAGC,mBAAa,CAC1C,EAD0C,CAArC;;AAIP,IAAIC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAuBC,MAAvB;AACZ,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,+CAAYF,QAAUC,MAAM,CAACE,QAA7B;;AACF,SAAK,iBAAL;AACE,+CAAYH,QAAUC,MAAM,CAACE,QAA7B;;AAEF;AACE,YAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AAPJ;AASD,CAVD;;AAYA,IAAaC,gBAAgB,GAAoC,SAApDA,gBAAoD,CAACC,EAAD;MAC/DC;MACAC;MACAC;MACAC;AAEA,MAAMC,MAAM,GAAG;AACbH,IAAAA,QAAQ,UADK;AAEbC,IAAAA,MAAM,QAFO;AAGbC,IAAAA,UAAU;AAHG,GAAf;;AAMM,MAAAE;;;;;IAAA;AAAA,MAACZ,aAAD;AAAA,MAAQa,gBAAR;;AAON,MAAMC,KAAK,GAAGC,aAAO,CAAC;AAAM,WAAC;AAAEf,MAAAA,KAAK,OAAP;AAASa,MAAAA,QAAQ;AAAjB,KAAD;AAAqB,GAA5B,EAA8B,CAACb,KAAD,EAAQa,QAAR,CAA9B,CAArB;AAEAG,EAAAA,eAAS,CAAC;AACR,QAAIC,MAAM,GAAG,KAAb;;AACA,QAAMC,YAAY,GAAG,SAAfA,YAAe;;;;;;;;;AAGjB,kBAAIlB,KAAK,CAACmB,KAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA4B;;eAAA;AAEtBC,cAAAA,GAAG,GAAMzB,MAAM,YAAN,GAAgBY,QAAhB,MAAA,GAA4BE,UAA5B,MAAA,GAA0CD,MAAnD;AAGW;;gBAAMa,KAAK,CAACD,GAAD,EAAX;;;AAAXE,cAAAA,QAAQ,GAAGjB,OAAA,EAAX;AACY;;gBAAMiB,QAAQ,CAACC,IAAT,GAAN;;;AAAVL,cAAAA,KAAK,GAAKb,OAAA,EAAA,MAAV;AAGFmB,cAAAA,IAAI,GAAGN,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD;AAA4B,uBAAAA,IAAI,CAACC,IAAL;AAAS,eAA/C,CAAP;;AAGN,kBAAI,CAACX,MAAL,EAAa;AACXJ,gBAAAA,QAAQ,CAAC;AACPX,kBAAAA,IAAI,EAAE,WADC;AAEPC,kBAAAA,OAAO,EAAE;AAAEgB,oBAAAA,KAAK,EAAEM,IAAT;AAAeI,oBAAAA,OAAO,EAAE;AAAxB;AAFF,iBAAD,CAAR;AAID;;;;;;;;AAEDhB,cAAAA,QAAQ,CAAC;AACPX,gBAAAA,IAAI,EAAE,iBADC;AAEPC,gBAAAA,OAAO,EAAE;AAAE0B,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,KAAK,EAAE;AAAzB;AAFF,eAAD,CAAR;;;;;;;;;;;;AAKH,KA3BD;;AA4BAZ,IAAAA,YAAY;AACZ,WAAO;AACLD,MAAAA,MAAM,GAAG,IAAT;AACD,KAFD;AAGD,GAlCQ,EAkCN,CAACjB,KAAK,CAACmB,KAAP,EAAcX,QAAd,EAAwBC,MAAxB,EAAgCC,UAAhC,CAlCM,CAAT;AAoCA,SACEqB,4BAAA,CAAClC,eAAe,CAACmC,QAAjB;AAA0BlB,IAAAA,KAAK,EAAEA;GAAjC,EACGP,QADH,CADF;AAKD,CA9DM;;ACxDP,IAAM0B,kBAAkB,GAAG,SAArBA,kBAAqB;AACzB,MAAMC,OAAO,GAAGC,gBAAU,CAACtC,eAAD,CAA1B;;AACA,MAAIqC,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIhC,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,SAAO8B,OAAP;AACD,CAND;;ICAaG,OAAO,GAAG,SAAVA,OAAU,CAACT,IAAD;AACb,MAAA5B,kCAAA;AACR,MAAMmB,KAAK,GAAGJ,aAAO,CAAC;AAAM,WAAAf,KAAK,CAACmB,KAAN;AAAW,GAAlB,EAAoB,CAACnB,KAAK,CAACmB,KAAP,CAApB,CAArB;AAEAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBpB,KAAzB;AAEA,SAAO;AACLqB,IAAAA,IAAI,EAAErB,KAAK,CAACsB,OAAN,CAAcb,IAAd,MAAwB,CAAC;AAD1B,GAAP;AAGD,CAVM;;ICKMc,IAAI,GAAwB,SAA5BA,IAA4B,CAACpC,EAAD;MAAGC;MAAUqB;AAC5C,MAAA5B,kCAAA;AACR,MAAMwC,IAAI,GAAGzB,aAAO,CAAC;AAAM,WAAAf,KAAK,CAACmB,KAAN,CAAYsB,OAAZ,CAAoBb,IAApB,MAA8B,CAAC,CAA/B;AAAgC,GAAvC,EAAyC,CAAC5B,KAAK,CAACmB,KAAP,CAAzC,CAApB;;AAGA,MAAI,CAACqB,IAAL,EAAW,OAAO,IAAP;AAEX,SAAOT,4BAAA,CAACY,cAAD,MAAA,EAAWpC,QAAX,CAAP;AACD,CARM;;;;;;;"}