{"version":3,"file":"upstamps-react-sdk.cjs.development.js","sources":["../src/Context.tsx","../src/useFlag.tsx","../src/Flag.tsx"],"sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\n\nexport interface UpStampsConfigParams {\n  clientId: string;\n  stage: string;\n  projectId: string;\n}\n\nexport interface UpStampsState {\n  name: string;\n  flags: Array<string>;\n  params: UpStampsConfigParams;\n}\n\nexport interface UpStampsContextState {\n  state: UpStampsState;\n}\n\nexport interface UpStampsProviderProps extends UpStampsConfigParams {\n  children: React.ReactNode;\n}\n\nexport const UpStampsContext = createContext<UpStampsContextState>(\n  {} as UpStampsContextState\n);\n\nexport const UpStampsProvider: React.FC<UpStampsProviderProps> = ({\n  children,\n  clientId,\n  stage,\n  projectId,\n}) => {\n  const params = {\n    clientId,\n    stage,\n    projectId,\n  };\n\n  const [state, dispatch] = useState({\n    name: \"Johhn\",\n    flags: [\"car\", \"chat\", \"profile\", \"drawer\"],\n    params,\n  });\n\n  const [contextValue, setContextValue] = useState({\n    state,\n    dispatch,\n  });\n\n  // Update context value and trigger re-render\n  // This patterns avoids unnecessary deep renders\n  // https://reactjs.org/docs/context.html#caveats\n  useEffect(() => {\n    setContextValue({ ...contextValue, state });\n  }, [state]);\n\n  return (\n    <UpStampsContext.Provider value={contextValue}>\n      {children}\n    </UpStampsContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { UpStampsContext } from \"./Context\";\n\nexport const useFlag = (name: string) => {\n  const { state } = useContext(UpStampsContext);\n\n  return {\n    show: state.flags.indexOf(name) !== -1,\n  } as const;\n};\n","import React, { Fragment, useContext } from \"react\";\nimport { UpStampsContext } from \"./Context\";\n\nexport interface FlagProps {\n  children: React.ReactNode;\n  name: string;\n}\n\nexport const Flag: React.FC<FlagProps> = ({ children, name }) => {\n  const { state } = useContext(UpStampsContext);\n  const show = state.flags.indexOf(name) !== -1;\n\n  //Hide the feature\n  if (!show) return null;\n\n  return <Fragment>{children}</Fragment>;\n};\n"],"names":["UpStampsContext","createContext","UpStampsProvider","_a","children","clientId","stage","projectId","params","_b","state","dispatch","_c","contextValue","setContextValue","useEffect","React","Provider","value","useFlag","name","show","flags","indexOf","Flag","Fragment"],"mappings":";;;;;;;;;;IAsBaA,eAAe;AAAA;AAAGC,mBAAa,CAC1C,EAD0C;IAI/BC,gBAAgB,GAAoC,SAApDA,gBAAoD,CAACC,EAAD;MAC/DC;MACAC;MACAC;MACAC;AAEA,MAAMC,MAAM,GAAG;AACbH,IAAAA,QAAQ,UADK;AAEbC,IAAAA,KAAK,OAFQ;AAGbC,IAAAA,SAAS;AAHI,GAAf;;AAMM,MAAAE;;;;IAAA;AAAA,MAACC,aAAD;AAAA,MAAQC,gBAAR;;AAMA,MAAAC;;;IAAA;AAAA,MAACC,oBAAD;AAAA,MAAeC,uBAAf;AAMN;AACA;;;AACAC,EAAAA,eAAS,CAAC;AACRD,IAAAA,eAAe,mCAAMD;AAAcH,MAAAA,KAAK;MAAzB,CAAf;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,SACEM,4BAAA,CAAChB,eAAe,CAACiB,QAAjB;AAA0BC,IAAAA,KAAK,EAAEL;GAAjC,EACGT,QADH,CADF;AAKD;;IC1DYe,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AACb,MAAAV,+CAAA;AAER,SAAO;AACLW,IAAAA,IAAI,EAAEX,KAAK,CAACY,KAAN,CAAYC,OAAZ,CAAoBH,IAApB,MAA8B,CAAC;AADhC,GAAP;AAGD,CANM;;ICKMI,IAAI,GAAwB,SAA5BA,IAA4B,CAACrB,EAAD;MAAGC;MAAUgB;AAC5C,MAAAV,+CAAA;AACR,MAAMW,IAAI,GAAGX,KAAK,CAACY,KAAN,CAAYC,OAAZ,CAAoBH,IAApB,MAA8B,CAAC,CAA5C;;AAGA,MAAI,CAACC,IAAL,EAAW,OAAO,IAAP;AAEX,SAAOL,4BAAA,CAACS,cAAD,MAAA,EAAWrB,QAAX,CAAP;AACD,CARM;;;;;;;"}