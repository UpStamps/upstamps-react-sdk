{"version":3,"file":"upstamps-react.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/Utils/constants.ts","../src/Contexts/Context.tsx","../src/Contexts/useUpstampsContext.tsx","../src/ABTests/shared.ts","../src/ABTests/ABTest.tsx","../src/ABTests/ABTestLocal.tsx","../src/Utils/functions.ts","../src/Segments/shared.ts","../src/Scopes/ScopeContext.tsx","../src/Flags/Flag.tsx","../src/Remotes/RemoteFlag.tsx","../src/Segments/Segment.tsx","../src/Segments/SegmentLocal.tsx","../src/ABTests/useABTest.tsx","../src/ABTests/useABTestLocal.tsx","../src/Flags/useFlag.tsx","../src/Remotes/useRemoteFlag.tsx","../src/Segments/useSegment.tsx","../src/Segments/useSegmentLocal.tsx"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export const apiUrl: string = \"https://services.upstamps.com/api\";\n","import React, { createContext, useEffect, useReducer, useMemo } from \"react\";\n//Constants\nimport { apiUrl } from \"../Utils/constants\";\n//Utils\nimport localForage from \"localforage\";\n\nexport interface UpStampsConfigParams {\n  clientId: string;\n  envKey: string;\n  projectKey: string;\n  endpoint?: string;\n}\n\nexport interface UpStampsState {\n  loading: boolean;\n  error: boolean;\n  flags: Array<string>;\n  remotes: Array<{ name: string; data: {} }>;\n  params: UpStampsConfigParams;\n}\n\nexport interface UpStampsContextState {\n  state: UpStampsState;\n}\n\nexport interface UpStampsProviderProps extends UpStampsConfigParams {\n  children: React.ReactNode;\n}\n\nexport type ReducerSetFlags = {\n  type: \"set-flags\";\n  payload: {\n    flags: Array<string>;\n    loading: boolean;\n  };\n};\n\nexport type ReducerSetFlagsError = {\n  type: \"set-flags-error\";\n  payload: {\n    error: boolean;\n    loading: boolean;\n  };\n};\n\nexport type ReducerSetRemotes = {\n  type: \"set-remotes\";\n  payload: {\n    remotes: Array<{\n      name: string;\n      data: {};\n    }>;\n    loading: boolean;\n  };\n};\n\nexport type ReducerSetRemotesError = {\n  type: \"set-remotes-error\";\n  payload: {\n    error: boolean;\n    loading: boolean;\n  };\n};\n\nexport type ReducerActions =\n  | ReducerSetFlags\n  | ReducerSetFlagsError\n  | ReducerSetRemotes\n  | ReducerSetRemotesError;\n\nexport const UpStampsContext = createContext<UpStampsContextState>(\n  {} as UpStampsContextState\n);\n\nlet reducer = (state: UpStampsState, action: ReducerActions) => {\n  switch (action.type) {\n    case \"set-flags\":\n      return { ...state, ...action.payload };\n    case \"set-flags-error\":\n      return { ...state, ...action.payload };\n    case \"set-remotes\":\n      return { ...state, ...action.payload };\n    case \"set-remotes-error\":\n      return { ...state, ...action.payload };\n\n    default:\n      throw new Error(`Unhandled action type`);\n  }\n};\n\nexport const UpStampsProvider: React.FC<UpStampsProviderProps> = ({\n  children,\n  clientId,\n  envKey,\n  projectKey,\n  endpoint = apiUrl\n}) => {\n  const params = {\n    clientId,\n    envKey,\n    projectKey,\n    endpoint\n  };\n\n  const [state, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: false,\n    flags: [],\n    remotes: [],\n    params\n  });\n\n  const value = useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n  //Get All Flags on Init\n  useEffect(() => {\n    let ignore = false;\n    //Get All the Flags\n    const onFetchFlags = async () => {\n      try {\n        //If the flags are collected, do not fetch again\n        if (state.flags.length > 0) return;\n\n        //Service Url\n        const url = `${endpoint}/${clientId}/${projectKey}/${envKey}/flags`;\n\n        //Response with the all the flags\n        const response = await fetch(url);\n        const { flags } = await response.json();\n\n        //Filters flags a creates a simple array\n        const data = flags.map((item: { name: string }) => item.name);\n\n        //Updates the state with the flags\n        if (!ignore) {\n          dispatch({\n            type: \"set-flags\",\n            payload: {\n              flags: data,\n              loading: false\n            }\n          });\n          //Update or save on localStorage\n          await localForage.setItem(\"flags\", data);\n        }\n      } catch (e) {\n        dispatch({\n          type: \"set-flags-error\",\n          payload: { loading: false, error: true }\n        });\n      }\n    };\n    //Get All the Remote Flags\n    const onFetchRemotes = async () => {\n      try {\n        //If the Remotes Flags are collected, do not fetch again\n        if (state.remotes.length > 0) return;\n\n        //Service Url\n        const url = `${endpoint}/${clientId}/${projectKey}/${envKey}/remotes`;\n\n        //Response with the all the remotes flags\n        const response = await fetch(url);\n        const { remotes } = await response.json();\n\n        //Updates the state with the remotes flags\n        if (!ignore) {\n          dispatch({\n            type: \"set-remotes\",\n            payload: { remotes, loading: false }\n          });\n          //Update or save on localStorage\n          await localForage.setItem(\"remotes\", remotes);\n        }\n      } catch (e) {\n        dispatch({\n          type: \"set-remotes-error\",\n          payload: { loading: false, error: true }\n        });\n      }\n    };\n    onFetchFlags();\n    onFetchRemotes();\n    return () => {\n      ignore = true;\n    };\n  }, []);\n\n  return (\n    <UpStampsContext.Provider value={value}>\n      {children}\n    </UpStampsContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { UpStampsContext } from \"./Context\";\n\nconst useUpStampsContext = () => {\n  const context = useContext(UpStampsContext);\n  if (context === undefined) {\n    throw new Error(\"UpStampsContext must be used with UpStampsProvider!\");\n  }\n  return context;\n};\n\nexport default useUpStampsContext;\n","export const variantTypes = [\"A\", \"B\"];\n\nexport const fetchHandler = async (url: string, name: string) => {\n  try {\n    //Response with the all the A/B Tests\n    const response = await fetch(url);\n    const { ABTesting } = await response.json();\n\n    const result = ABTesting.filter((item: any) => item.name === name);\n    const show = result.length > 0;\n    const randomVariant = Math.floor(Math.random() * variantTypes.length);\n\n    return {\n      show,\n      variant: variantTypes[randomVariant],\n      loading: false\n    };\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const emitterHandler = async (\n  variant: string,\n  name: string,\n  url: string\n) => {\n  try {\n    const post_body = {\n      name,\n      varA: variant === \"A\" ? 1 : 0,\n      varB: variant === \"B\" ? 1 : 0\n    };\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\n      body: JSON.stringify(post_body)\n    });\n\n    return await response.json();\n  } catch (e) {\n    return e;\n  }\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n//Utils\nimport { apiUrl } from \"../Utils/constants\";\nimport { fetchHandler, emitterHandler } from \"./shared\";\n//Types\nimport {ABTestProps, IState, ContainerProps} from \"./types\"\n\nconst Container = React.forwardRef(\n  (props: ContainerProps, ref: React.Ref<any>) => {\n    React.useImperativeHandle(ref, () => ({ emitter: props.emitter }));\n\n    return <Fragment>{props.children}</Fragment>;\n  }\n);\n\nexport const ABTest = ({ children, name, testRef }: ABTestProps) => {\n  const context = useUpstampsContext();\n  const [state, setState] = useState<IState>({\n    component: [],\n    loading: true,\n    error: false,\n    variant: \"A\",\n    show: false\n  });\n\n  const { clientId, projectKey, envKey } = context.state.params;\n  const url = `${apiUrl}/${clientId}/${projectKey}/${envKey}/testing`;\n\n  const onRenderChildren = (variant: string) => {\n    const component = React.Children.map(children, (child: any) => {\n      if (child.props.name === variant) {\n        return child;\n      }\n    });\n\n    setState((prevState: IState) => {\n      return {\n        ...prevState,\n        component\n      };\n    });\n  };\n\n  useEffect(() => {\n    const onFetch = async () => {\n      try {\n        const { show, loading, variant } = await fetchHandler(url, name);\n\n        onRenderChildren(variant);\n\n        setState((prevState: IState) => {\n          return {\n            ...prevState,\n            show,\n            variant,\n            loading\n          };\n        });\n      } catch (e) {\n        setState((prevState: IState) => {\n          return { ...prevState, error: true, loading: false };\n        });\n      }\n    };\n    onFetch();\n  }, [name, context.state.params]);\n\n  const onEmitter = async () => {\n    try {\n      return await emitterHandler(state.variant, name, url);\n    } catch (e) {\n      return e;\n    }\n  };\n\n  if (!state.loading && !state.show) return null;\n\n  return (\n    <Container ref={testRef} emitter={onEmitter}>\n      {state.component}\n    </Container>\n  );\n};\n\nconst Variant = ({\n  children,\n  name\n}: {\n  children: React.ReactNode;\n  name: string;\n}) => {\n  return React.cloneElement(\n    <Fragment />,\n    { name },\n    <Fragment>{children}</Fragment>\n  );\n};\n\nVariant.displayName = \"ABTest.Variant\";\n\nABTest.Variant = Variant;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n//Utils\nimport { apiUrl } from \"../Utils/constants\";\nimport { fetchHandler, emitterHandler } from \"./shared\";\nimport localForage from \"localforage\";\n//Types\nimport {ABTestLocalProps, IState, ContainerProps} from \"./types\"\n\n\nconst Container = React.forwardRef(\n  (props: ContainerProps, ref: React.Ref<any>) => {\n    React.useImperativeHandle(ref, () => ({ emitter: props.emitter }));\n\n    return <Fragment>{props.children}</Fragment>;\n  }\n);\n\nexport const ABTestLocal = ({\n  children,\n  name,\n  testRef,\n  localStorage = false\n}: ABTestLocalProps) => {\n  const context = useUpstampsContext();\n  const [state, setState] = useState<IState>({\n    component: [],\n    loading: true,\n    error: false,\n    variant: \"A\",\n    show: false\n  });\n\n  const { clientId, projectKey, envKey } = context.state.params;\n  const url = `${apiUrl}/${clientId}/${projectKey}/${envKey}/testing`;\n\n  const onRenderChildren = (variant: string) => {\n    const component = React.Children.map(children, (child: any) => {\n      if (child.props.name === variant) {\n        return child;\n      }\n    });\n\n    setState((prevState: IState) => {\n      return {\n        ...prevState,\n        component\n      };\n    });\n  };\n\n  useEffect(() => {\n    const onFetch = async () => {\n      try {\n        const storageData = (await localForage.getItem(name)) as IState;\n\n        //Checks the current data on local storage\n        if (localStorage && storageData !== null) {\n          console.log(\"ABTest local\");\n          onRenderChildren(storageData.variant);\n\n          setState((prevState: IState) => {\n            return {\n              ...prevState,\n              ...storageData\n            };\n          });\n        } else {\n          console.log(\"ABTest remote\");\n          const { show, loading, variant } = await fetchHandler(url, name);\n\n          onRenderChildren(variant);\n\n          setState((prevState: IState) => {\n            return {\n              ...prevState,\n              show,\n              variant,\n              loading\n            };\n          });\n\n          //Updates local storage with the new data\n          await localForage.setItem(name, {\n            show,\n            variant,\n            loading\n          });\n        }\n      } catch (e) {\n        setState((prevState: IState) => {\n          return { ...prevState, error: true, loading: false };\n        });\n      }\n    };\n    onFetch();\n  }, [name, context.state.params]);\n\n  const onEmitter = async () => {\n    try {\n      return await emitterHandler(state.variant, name, url);\n    } catch (e) {\n      return e;\n    }\n  };\n\n  if (!state.loading && !state.show) return null;\n\n  return (\n    <Container ref={testRef} emitter={onEmitter}>\n      {state.component}\n    </Container>\n  );\n};\n\nconst Variant = ({\n  children,\n  name\n}: {\n  children: React.ReactNode;\n  name: string;\n}) => {\n  return React.cloneElement(\n    <Fragment />,\n    { name },\n    <Fragment>{children}</Fragment>\n  );\n};\n\nVariant.displayName = \"ABTest.Variant\";\n\nABTestLocal.Variant = Variant;\n","export const queryBuilder = (params: {}) => {\n  const esc = encodeURIComponent;\n\n  return Object.keys(params)\n    .filter(\n      key => params[key] !== undefined && params[key] && params[key] !== null\n    )\n    .map(key => esc(key) + \"=\" + esc(params[key]))\n    .join(\"&\");\n};\n","//Utils\nimport { queryBuilder } from \"../Utils/functions\";\n\nexport const handleFetch = async (\n  url: string,\n  name: string,\n  params: { country?: string; client?: string; clientType?: string }\n) => {\n  try {\n    const query = queryBuilder({\n      name: name,\n      country: params.country,\n      client: params.client,\n      clientType: params.clientType\n    });\n\n    const response = await fetch(`${url}?${query}`, {\n      method: \"GET\"\n    });\n\n    const { segment } = await response.json();\n    const show = segment.length > 0;\n\n    return {\n      segment,\n      show,\n      loading: false\n    };\n  } catch (e) {\n    throw e;\n  }\n};\n","import React, { createContext, useEffect, useReducer, useMemo } from \"react\";\n//Constants\nimport { apiUrl } from \"../Utils/constants\";\n//Contexts\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n\nexport interface ScopesConfigParams {\n  name?: string | null;\n  email: string;\n}\n\nexport interface ScopesState {\n  loading: boolean;\n  error: boolean;\n  params: ScopesConfigParams;\n}\n\nexport interface ScopesContextState {\n  state: ScopesState;\n}\n\nexport interface ScopesProviderProps extends ScopesConfigParams {\n  children: React.ReactNode;\n}\n\nexport type ReducerSetScope = {\n  type: \"set-scope\";\n  payload: {\n    success: boolean;\n    loading: boolean;\n  };\n};\n\nexport type ReducerSetScopeError = {\n  type: \"set-scope-error\";\n  payload: {\n    error: boolean;\n    loading: boolean;\n  };\n};\n\nexport type ReducerScopeActions = ReducerSetScope | ReducerSetScopeError;\n\nexport const ScopesContext = createContext<ScopesContextState>(\n  {} as ScopesContextState\n);\n\nlet reducer = (state: ScopesState, action: ReducerScopeActions) => {\n  switch (action.type) {\n    case \"set-scope\":\n      return { ...state, ...action.payload };\n    case \"set-scope-error\":\n      return { ...state, ...action.payload };\n\n    default:\n      throw new Error(`Unhandled action type`);\n  }\n};\n\nexport const ScopesProvider: React.FC<ScopesProviderProps> = ({\n  children,\n  name,\n  email\n}) => {\n  const context = useUpstampsContext();\n\n  const params = {\n    name,\n    email\n  };\n\n  const [state, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: false,\n    params\n  });\n\n  const { clientId, projectKey } = context.state.params;\n\n  const value = useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n  useEffect(() => {\n    let ignore = false;\n    const onSetScope = async () => {\n      try {\n        //Service Url\n        const url = `${apiUrl}/${clientId}/${projectKey}/scopes/add`;\n\n        const post_body = {\n          name,\n          email\n        };\n\n        await fetch(url, {\n          method: \"POST\",\n          headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\n          body: JSON.stringify(post_body)\n        });\n\n        window.localStorage.setItem(\"upstamps_scope_email\", email);\n\n        if (!ignore) {\n          dispatch({\n            type: \"set-scope\",\n            payload: { success: true, loading: false }\n          });\n        }\n      } catch (e) {\n        dispatch({\n          type: \"set-scope-error\",\n          payload: { loading: false, error: true }\n        });\n      }\n    };\n\n    //Get the email from localStorage\n    const storageEmail = window.localStorage.getItem(\"upstamps_scope_email\");\n\n    //Only set a scope if the email is null or different\n    if (storageEmail !== email) {\n      onSetScope();\n    }\n    return () => {\n      ignore = true;\n    };\n  }, [email]);\n\n  return (\n    <ScopesContext.Provider value={value}>{children}</ScopesContext.Provider>\n  );\n};\n","import React, { Fragment, useMemo } from \"react\";\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n\nexport interface FlagProps {\n  children: React.ReactNode;\n  name: string;\n}\n\nexport const Flag: React.FC<FlagProps> = ({ children, name }) => {\n  const { state } = useUpstampsContext();\n  const show = useMemo(() => state.flags.indexOf(name) !== -1, [\n    state.flags,\n    name,\n  ]);\n\n  //Hide the feature\n  if (!show) return null;\n\n  return <Fragment>{children}</Fragment>;\n};\n","import React, { Fragment, useMemo } from \"react\";\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n\nexport interface RemoteFlagProps {\n  children: any;\n  name: string;\n}\n\nexport const RemoteFlag: React.FC<RemoteFlagProps> = ({ children, name }) => {\n  const { state } = useUpstampsContext();\n\n  const remote = useMemo(\n    () => state.remotes.filter((item: any) => item.name === name),\n    [state.remotes, name]\n  );\n  const verifyRemote = useMemo(() => remote.length > 0, [remote]);\n  const data = verifyRemote ? remote[0].data : {};\n\n  //Hide the feature\n  if (!verifyRemote) return null;\n\n  return <Fragment>{children(data)}</Fragment>;\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\n//Utils\nimport { apiUrl } from \"../Utils/constants\";\nimport { handleFetch } from \"./shared\";\n//Context\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n//Types \nimport {IState, SegmentProps} from \"./types\"\n\n\nexport const Segment: React.FC<SegmentProps> = ({ children, name, params }) => {\n  const context = useUpstampsContext();\n  const [state, setState] = useState<IState>({\n    loading: true,\n    error: false,\n    show: false\n  });\n\n  const { clientId, projectKey, envKey } = context.state.params;\n  const url = `${apiUrl}/${clientId}/${projectKey}/${envKey}/segment`;\n\n  useEffect(() => {\n    const onFetch = async () => {\n      try {\n        const { show, loading } = await handleFetch(url, name, params);\n\n        setState((prevState: IState) => {\n          return {\n            ...prevState,\n            show,\n            loading\n          };\n        });\n      } catch (e) {\n        setState((prevState: IState) => {\n          return { ...prevState, error: true, loading: false };\n        });\n      }\n    };\n    onFetch();\n  }, [name, context.state.params]);\n\n  //Hide the feature\n  if (!state.show) return null;\n\n  return <Fragment>{children}</Fragment>;\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\n//Utils\nimport { apiUrl } from \"../Utils/constants\";\nimport { handleFetch } from \"./shared\";\nimport isEqual from \"lodash.isequal\";\n//Context\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n//LocalStorage\nimport localForage from \"localforage\";\n//Types \nimport {IState, SegmentLocalProps, IStorageData} from \"./types\"\n\n\nexport const SegmentLocal: React.FC<SegmentLocalProps> = ({\n  children,\n  name,\n  params,\n  localStorage = false\n}) => {\n  const context = useUpstampsContext();\n  const [state, setState] = useState<IState>({\n    loading: true,\n    error: false,\n    show: false\n  });\n\n  const { clientId, projectKey, envKey } = context.state.params;\n  const url = `${apiUrl}/${clientId}/${projectKey}/${envKey}/segment`;\n\n  useEffect(() => {\n    const onFetch = async () => {\n      try {\n        const storageData = (await localForage.getItem(name)) as IStorageData;\n\n        //Checks the current data on local storage\n        if (localStorage && storageData !== null) {\n          console.log(\"Segment local = \");\n          setState((prevState: IState) => {\n            return {\n              ...prevState,\n              show: isEqual(params, storageData.params),\n              loading: false\n            };\n          });\n        } else {\n          const { show, loading } = await handleFetch(url, name, params);\n          console.log(\"Segment remote\");\n          setState((prevState: IState) => {\n            return {\n              ...prevState,\n              show,\n              loading\n            };\n          });\n          //Updates local storage with the new data\n          await localForage.setItem(name, {\n            show,\n            loading,\n            params\n          });\n        }\n      } catch (e) {\n        setState((prevState: IState) => {\n          return { ...prevState, error: true, loading: false };\n        });\n      }\n    };\n    onFetch();\n  }, [name, context.state.params]);\n\n  //Hide the feature\n  if (!state.show) return null;\n\n  return <Fragment>{children}</Fragment>;\n};\n","import { useEffect, useState } from \"react\";\n//Context\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n//Utils\nimport { apiUrl } from \"../Utils/constants\";\nimport { fetchHandler, emitterHandler } from \"./shared\";\n//Types\nimport { IState } from \"./types\"\n\n\nexport const useABTest = (name: string) => {\n  const context = useUpstampsContext();\n  const [state, setState] = useState<IState>({\n    loading: true,\n    error: false,\n    show: false,\n    variant: \"A\"\n  });\n  const { clientId, projectKey, envKey } = context.state.params;\n  const url = `${apiUrl}/${clientId}/${projectKey}/${envKey}/testing`;\n\n  useEffect(() => {\n    const onFetch = async () => {\n      try {\n        const { show, loading, variant } = await fetchHandler(url, name);\n\n        setState((prevState: IState) => {\n          return {\n            ...prevState,\n            show,\n            variant,\n            loading\n          };\n        });\n      } catch (e) {\n        setState((prevState: IState) => {\n          return { ...prevState, error: true, loading: false };\n        });\n      }\n    };\n    onFetch();\n  }, [name, context.state.params]);\n\n  const onEmitter = async () => {\n    try {\n      return await emitterHandler(state.variant, name, url);\n    } catch (e) {\n      return e;\n    }\n  };\n\n  return {\n    show: state.show,\n    error: state.error,\n    loading: state.loading,\n    variant: state.variant,\n    emitter: onEmitter\n  } as IState | { emitter: () => {} };\n};\n","import { useEffect, useState } from \"react\";\n//Context\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n//Utils\nimport { apiUrl } from \"../Utils/constants\";\nimport { fetchHandler, emitterHandler } from \"./shared\";\nimport localForage from \"localforage\";\n//Types\nimport { IState } from \"./types\"\n\n\nexport const useABTestLocal = (name: string, localStorage: boolean = false) => {\n  const context = useUpstampsContext();\n  const [state, setState] = useState<IState>({\n    loading: true,\n    error: false,\n    show: false,\n    variant: \"A\"\n  });\n  const { clientId, projectKey, envKey } = context.state.params;\n  const url = `${apiUrl}/${clientId}/${projectKey}/${envKey}/testing`;\n\n  useEffect(() => {\n    const onFetch = async () => {\n      try {\n        const storageData = (await localForage.getItem(name)) as IState;\n\n        //Checks the current data on local storage\n        if (localStorage && storageData !== null) {\n          console.log(\"useABTest local\");\n          setState((prevState: IState) => {\n            return {\n              ...prevState,\n              ...storageData\n            };\n          });\n        } else {\n          console.log(\"useABTest remote\");\n          const { show, loading, variant } = await fetchHandler(url, name);\n          setState((prevState: IState) => {\n            return {\n              ...prevState,\n              show,\n              variant,\n              loading\n            };\n          });\n          //Updates local storage with the new data\n          await localForage.setItem(name, {\n            show,\n            variant,\n            loading\n          });\n        }\n      } catch (e) {\n        setState((prevState: IState) => {\n          return { ...prevState, error: true, loading: false };\n        });\n      }\n    };\n    onFetch();\n  }, [name, context.state.params]);\n\n  const onEmitter = async () => {\n    try {\n      return await emitterHandler(state.variant, name, url);\n    } catch (e) {\n      return e;\n    }\n  };\n\n  return {\n    show: state.show,\n    error: state.error,\n    loading: state.loading,\n    variant: state.variant,\n    emitter: onEmitter\n  } as const;\n};\n","import { useMemo } from \"react\";\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n\nexport const useFlag = (name: string) => {\n  const { state } = useUpstampsContext();\n  const flags = useMemo(() => state.flags, [state.flags]);\n\n  return {\n    show: flags.indexOf(name) !== -1,\n  } as const;\n};\n","import { useMemo } from \"react\";\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n\nexport const useRemoteFlag = (name: string) => {\n  const { state } = useUpstampsContext();\n\n  const remote = useMemo(\n    () => state.remotes.filter((item: any) => item.name === name),\n    [state.remotes, name]\n  );\n  const verifyRemote = useMemo(() => remote.length > 0, [remote]);\n\n  return {\n    show: verifyRemote,\n    data: verifyRemote ? remote[0].data : {},\n  } as const;\n};\n","import { useState, useEffect } from \"react\";\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n//Utils\nimport { apiUrl } from \"../Utils/constants\";\nimport { handleFetch } from \"./shared\";\n//Types \nimport {IState} from \"./types\"\n\n\n\nexport const useSegment = (\n  name: string,\n  params: { country?: string; client?: string; clientType?: string }\n) => {\n  const context = useUpstampsContext();\n  const [state, setState] = useState<IState>({\n    loading: true,\n    error: false,\n    show: false\n  });\n  const { clientId, projectKey, envKey } = context.state.params;\n  const url = `${apiUrl}/${clientId}/${projectKey}/${envKey}/segment`;\n\n  useEffect(() => {\n    const onFetch = async () => {\n      try {\n        const { show, loading } = await handleFetch(url, name, params);\n\n        setState((prevState: IState) => {\n          return {\n            ...prevState,\n            show,\n            loading\n          };\n        });\n      } catch (e) {\n        setState((prevState: IState) => {\n          return { ...prevState, error: true, loading: false };\n        });\n      }\n    };\n    onFetch();\n  }, [name, context.state.params]);\n\n  return {\n    show: state.show,\n    error: state.error,\n    loading: state.loading\n  } as IState | { emitter: () => {} };\n};\n","import { useState, useEffect } from \"react\";\nimport useUpstampsContext from \"../Contexts/useUpstampsContext\";\n//Utils\nimport { apiUrl } from \"../Utils/constants\";\nimport { handleFetch } from \"./shared\";\nimport localForage from \"localforage\";\nimport isEqual from \"lodash.isequal\";\n//Types \nimport {IState, IStorageData} from \"./types\"\n\nexport const useSegmentLocal = (\n  name: string,\n  params: { country?: string; client?: string; clientType?: string },\n  localStorage: boolean = false\n) => {\n  const context = useUpstampsContext();\n  const [state, setState] = useState<IState>({\n    loading: true,\n    error: false,\n    show: false\n  });\n  const { clientId, projectKey, envKey } = context.state.params;\n  const url = `${apiUrl}/${clientId}/${projectKey}/${envKey}/segment`;\n\n  useEffect(() => {\n    const onFetch = async () => {\n      try {\n        const storageData = (await localForage.getItem(name)) as IStorageData;\n        //Checks the current data on local storage\n        if (localStorage && storageData !== null) {\n          console.log(\"useSegment local\");\n          setState((prevState: IState) => {\n            return {\n              ...prevState,\n              show: isEqual(params, storageData.params),\n              loading: false\n            };\n          });\n        } else {\n          const { show, loading } = await handleFetch(url, name, params);\n          console.log(\"useSegment remote\");\n          setState((prevState: IState) => {\n            return {\n              ...prevState,\n              show,\n              loading\n            };\n          });\n\n          //Updates local storage with the new data\n          await localForage.setItem(name, {\n            show,\n            loading,\n            params\n          });\n        }\n      } catch (e) {\n        setState((prevState: IState) => {\n          return { ...prevState, error: true, loading: false };\n        });\n      }\n    };\n    onFetch();\n  }, [name, context.state.params]);\n\n  return {\n    show: state.show,\n    error: state.error,\n    loading: state.loading\n  } as const;\n};\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","value","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","apiUrl","UpStampsContext","createContext","reducer","action","payload","useUpStampsContext","useContext","variantTypes","fetchHandler","url","fetch","response","json","ABTesting","filter","item","show","randomVariant","Math","floor","random","variant","loading","emitterHandler","post_body","varA","varB","headers","body","JSON","stringify","Container","React","forwardRef","props","ref","useImperativeHandle","emitter","Fragment","children","ABTest","testRef","useUpstampsContext","useState","component","setState","params","clientId","projectKey","envKey","onRenderChildren","Children","map","child","prevState","useEffect","onFetch","Variant","cloneElement","ABTestLocal","localStorage","localForage","getItem","storageData","console","log","setItem","queryBuilder","esc","encodeURIComponent","join","handleFetch","query","country","client","clientType","segment","ScopesContext","useMemo","flags","indexOf","remote","remotes","verifyRemote","data","email","useReducer","dispatch","ignore","onSetScope","window","success","Provider","isEqual","endpoint","onFetchFlags","onFetchRemotes"],"mappings":"mwBAOA,IAAIA,EAAW,SAAUC,GAGvB,IAAIC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IACIC,EAAYjB,OAAOkB,QADFJ,GAAWA,EAAQb,qBAAqBkB,EAAYL,EAAUK,GACtClB,WACzCmB,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAC,EAAUK,QAkMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EA3KuB,iBA6K3B,OAAO,SAAgBC,EAAQC,GAC7B,GA5KoB,cA4KhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GA/KoB,cA+KhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,MAoQG,CAAEE,WAnePC,EAmeyBC,MAAM,GA9P/B,IAHAT,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAIK,EAAWV,EAAQU,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUV,GACnD,GAAIW,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBX,EAAQI,OAGVJ,EAAQc,KAAOd,EAAQe,MAAQf,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GA/MqB,mBA+MjBD,EAEF,MADAA,EA7Mc,YA8MRH,EAAQK,IAGhBL,EAAQgB,kBAAkBhB,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQiB,OAAO,SAAUjB,EAAQK,KAGnCF,EAxNkB,YA0NlB,IAAIe,EAASC,EAAS1B,EAASE,EAAMK,GACrC,GAAoB,WAAhBkB,EAAOE,KAAmB,CAO5B,GAJAjB,EAAQH,EAAQS,KA7NA,YAFK,iBAmOjBS,EAAOb,MAAQQ,EACjB,SAGF,MAAO,CACLN,MAAOW,EAAOb,IACdI,KAAMT,EAAQS,MAGS,UAAhBS,EAAOE,OAChBjB,EA3OgB,YA8OhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMa,EAAOb,OA1QPgB,CAAiB5B,EAASE,EAAMK,GAE7CH,EAcT,SAASsB,EAASG,EAAIC,EAAKlB,GACzB,IACE,MAAO,CAAEe,KAAM,SAAUf,IAAKiB,EAAGE,KAAKD,EAAKlB,IAC3C,MAAOoB,GACP,MAAO,CAAEL,KAAM,QAASf,IAAKoB,IAhBjC/C,EAAQc,KAAOA,EAoBf,IAOIqB,EAAmB,GAMvB,SAASd,KACT,SAAS2B,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkB1C,GAAkB,WAClC,OAAO2C,MAGT,IAAIC,EAAWlD,OAAOmD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BrD,GAC5BG,EAAO0C,KAAKQ,EAAyB9C,KAGvC0C,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2B9C,UAClCkB,EAAUlB,UAAYD,OAAOkB,OAAO8B,GAQtC,SAASO,EAAsBtD,GAC7B,CAAC,OAAQ,QAAS,UAAUuD,SAAQ,SAAShC,GAC3CvB,EAAUuB,GAAU,SAASC,GAC3B,OAAOwB,KAAK3B,QAAQE,EAAQC,OAoClC,SAASgC,EAAcxC,GAgCrB,IAAIyC,EAgCJT,KAAK3B,QA9BL,SAAiBE,EAAQC,GACvB,SAASkC,IACP,OAAO,IAAIC,SAAQ,SAASC,EAASC,IAnCzC,SAASC,EAAOvC,EAAQC,EAAKoC,EAASC,GACpC,IAAIxB,EAASC,EAAStB,EAAUO,GAASP,EAAWQ,GACpD,GAAoB,UAAhBa,EAAOE,KAEJ,CACL,IAAIwB,EAAS1B,EAAOb,IAChBE,EAAQqC,EAAOrC,MACnB,OAAIA,GACiB,iBAAVA,GACPzB,EAAO0C,KAAKjB,EAAO,WACdiC,QAAQC,QAAQlC,EAAMsC,SAASC,MAAK,SAASvC,GAClDoC,EAAO,OAAQpC,EAAOkC,EAASC,MAC9B,SAASjB,GACVkB,EAAO,QAASlB,EAAKgB,EAASC,MAI3BF,QAAQC,QAAQlC,GAAOuC,MAAK,SAASC,GAI1CH,EAAOrC,MAAQwC,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOxB,EAAOb,KAiCZsC,CAAOvC,EAAQC,EAAKoC,EAASC,MAIjC,OAAOJ,EAaLA,EAAkBA,EAAgBQ,KAChCP,EAGAA,GACEA,KA+GV,SAAS3B,EAAoBF,EAAUV,GACrC,IAAII,EAASM,EAASvB,SAASa,EAAQI,QACvC,QApSEI,IAoSEJ,EAAsB,CAKxB,GAFAJ,EAAQU,SAAW,KAEI,UAAnBV,EAAQI,OAAoB,CAE9B,GAAIM,EAASvB,SAAiB,SAG5Ba,EAAQI,OAAS,SACjBJ,EAAQK,SA/SZG,EAgTII,EAAoBF,EAAUV,GAEP,UAAnBA,EAAQI,QAGV,OAAOS,EAIXb,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAI4C,UAChB,kDAGJ,OAAOpC,EAGT,IAAIK,EAASC,EAASf,EAAQM,EAASvB,SAAUa,EAAQK,KAEzD,GAAoB,UAAhBa,EAAOE,KAIT,OAHApB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMa,EAAOb,IACrBL,EAAQU,SAAW,KACZG,EAGT,IAAIqC,EAAOhC,EAAOb,IAElB,OAAM6C,EAOFA,EAAKzC,MAGPT,EAAQU,EAASyC,YAAcD,EAAK3C,MAGpCP,EAAQoD,KAAO1C,EAAS2C,QAQD,WAAnBrD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAnWVG,GA6WFR,EAAQU,SAAW,KACZG,GANEqC,GA3BPlD,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAI4C,UAAU,oCAC5BjD,EAAQU,SAAW,KACZG,GAoDX,SAASyC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB1B,KAAKgC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAItC,EAASsC,EAAMQ,YAAc,GACjC9C,EAAOE,KAAO,gBACPF,EAAOb,IACdmD,EAAMQ,WAAa9C,EAGrB,SAASjB,EAAQL,GAIfiC,KAAKgC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B7D,EAAYwC,QAAQkB,EAAczB,MAClCA,KAAKoC,OAAM,GA8Bb,SAAShC,EAAOiC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAShF,GAC9B,GAAIiF,EACF,OAAOA,EAAe3C,KAAK0C,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,OAASkB,EAAIJ,EAASG,QACpB,GAAIvF,EAAO0C,KAAK0C,EAAUI,GAGxB,OAFAlB,EAAK7C,MAAQ2D,EAASI,GACtBlB,EAAK3C,MAAO,EACL2C,EAOX,OAHAA,EAAK7C,WAndTC,EAodI4C,EAAK3C,MAAO,EAEL2C,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMmB,GAIjB,SAASA,IACP,MAAO,CAAEhE,WAnePC,EAmeyBC,MAAM,GA+MnC,OAxmBAiB,EAAkB7C,UAAYqD,EAAGsC,YAAc7C,EAC/CA,EAA2B6C,YAAc9C,EACzCC,EAA2BrC,GACzBoC,EAAkB+C,YAAc,oBAYlC/F,EAAQgG,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASlD,GAG2B,uBAAnCkD,EAAKH,aAAeG,EAAKC,QAIhCnG,EAAQoG,KAAO,SAASH,GAUtB,OATI/F,OAAOmG,eACTnG,OAAOmG,eAAeJ,EAAQhD,IAE9BgD,EAAOK,UAAYrD,EACbrC,KAAqBqF,IACzBA,EAAOrF,GAAqB,sBAGhCqF,EAAO9F,UAAYD,OAAOkB,OAAOoC,GAC1ByC,GAOTjG,EAAQuG,MAAQ,SAAS5E,GACvB,MAAO,CAAEwC,QAASxC,IAsEpB8B,EAAsBE,EAAcxD,WACpCwD,EAAcxD,UAAUO,GAAuB,WAC7C,OAAOyC,MAETnD,EAAQ2D,cAAgBA,EAKxB3D,EAAQwG,MAAQ,SAASzF,EAASC,EAASC,EAAMC,GAC/C,IAAIuF,EAAO,IAAI9C,EACb7C,EAAKC,EAASC,EAASC,EAAMC,IAG/B,OAAOlB,EAAQgG,oBAAoBhF,GAC/ByF,EACAA,EAAK/B,OAAON,MAAK,SAASF,GACxB,OAAOA,EAAOnC,KAAOmC,EAAOrC,MAAQ4E,EAAK/B,WAuKjDjB,EAAsBD,GAEtBA,EAAG5C,GAAqB,YAOxB4C,EAAGhD,GAAkB,WACnB,OAAO2C,MAGTK,EAAGkD,SAAW,WACZ,MAAO,sBAkCT1G,EAAQ2G,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIE,KAAOD,EACdD,EAAKvB,KAAKyB,GAMZ,OAJAF,EAAKG,UAIE,SAASpC,IACd,KAAOiC,EAAKhB,QAAQ,CAClB,IAAIkB,EAAMF,EAAKI,MACf,GAAIF,KAAOD,EAGT,OAFAlC,EAAK7C,MAAQgF,EACbnC,EAAK3C,MAAO,EACL2C,EAQX,OADAA,EAAK3C,MAAO,EACL2C,IAsCX1E,EAAQuD,OAASA,EAMjBhC,EAAQpB,UAAY,CAClB2F,YAAavE,EAEbgE,MAAO,SAASyB,GAcd,GAbA7D,KAAK8D,KAAO,EACZ9D,KAAKuB,KAAO,EAGZvB,KAAKf,KAAOe,KAAKd,WA9ejBP,EA+eAqB,KAAKpB,MAAO,EACZoB,KAAKnB,SAAW,KAEhBmB,KAAKzB,OAAS,OACdyB,KAAKxB,SAnfLG,EAqfAqB,KAAKgC,WAAWzB,QAAQ2B,IAEnB2B,EACH,IAAK,IAAIb,KAAQhD,KAEQ,MAAnBgD,EAAKe,OAAO,IACZ9G,EAAO0C,KAAKK,KAAMgD,KACjBT,OAAOS,EAAKgB,MAAM,MACrBhE,KAAKgD,QA7fXrE,IAmgBFsF,KAAM,WACJjE,KAAKpB,MAAO,EAEZ,IACIsF,EADYlE,KAAKgC,WAAW,GACLG,WAC3B,GAAwB,UAApB+B,EAAW3E,KACb,MAAM2E,EAAW1F,IAGnB,OAAOwB,KAAKmE,MAGdhF,kBAAmB,SAASiF,GAC1B,GAAIpE,KAAKpB,KACP,MAAMwF,EAGR,IAAIjG,EAAU6B,KACd,SAASqE,EAAOC,EAAKC,GAYnB,OAXAlF,EAAOE,KAAO,QACdF,EAAOb,IAAM4F,EACbjG,EAAQoD,KAAO+C,EAEXC,IAGFpG,EAAQI,OAAS,OACjBJ,EAAQK,SA9hBZG,KAiiBY4F,EAGZ,IAAK,IAAI9B,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GACxBpD,EAASsC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOyC,EAAO,OAGhB,GAAI1C,EAAMC,QAAU5B,KAAK8D,KAAM,CAC7B,IAAIU,EAAWvH,EAAO0C,KAAKgC,EAAO,YAC9B8C,EAAaxH,EAAO0C,KAAKgC,EAAO,cAEpC,GAAI6C,GAAYC,EAAY,CAC1B,GAAIzE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,GACzB,GAAI7B,KAAK8D,KAAOnC,EAAMG,WAC3B,OAAOuC,EAAO1C,EAAMG,iBAGjB,GAAI0C,GACT,GAAIxE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,OAG3B,CAAA,IAAI4C,EAMT,MAAM,IAAIhG,MAAM,0CALhB,GAAIuB,KAAK8D,KAAOnC,EAAMG,WACpB,OAAOuC,EAAO1C,EAAMG,gBAU9B1C,OAAQ,SAASG,EAAMf,GACrB,IAAK,IAAIiE,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,QAAU5B,KAAK8D,MACrB7G,EAAO0C,KAAKgC,EAAO,eACnB3B,KAAK8D,KAAOnC,EAAMG,WAAY,CAChC,IAAI4C,EAAe/C,EACnB,OAIA+C,IACU,UAATnF,GACS,aAATA,IACDmF,EAAa9C,QAAUpD,GACvBA,GAAOkG,EAAa5C,aAGtB4C,EAAe,MAGjB,IAAIrF,EAASqF,EAAeA,EAAavC,WAAa,GAItD,OAHA9C,EAAOE,KAAOA,EACdF,EAAOb,IAAMA,EAETkG,GACF1E,KAAKzB,OAAS,OACdyB,KAAKuB,KAAOmD,EAAa5C,WAClB9C,GAGFgB,KAAK2E,SAAStF,IAGvBsF,SAAU,SAAStF,EAAQ0C,GACzB,GAAoB,UAAhB1C,EAAOE,KACT,MAAMF,EAAOb,IAcf,MAXoB,UAAhBa,EAAOE,MACS,aAAhBF,EAAOE,KACTS,KAAKuB,KAAOlC,EAAOb,IACM,WAAhBa,EAAOE,MAChBS,KAAKmE,KAAOnE,KAAKxB,IAAMa,EAAOb,IAC9BwB,KAAKzB,OAAS,SACdyB,KAAKuB,KAAO,OACa,WAAhBlC,EAAOE,MAAqBwC,IACrC/B,KAAKuB,KAAOQ,GAGP/C,GAGT4F,OAAQ,SAAS9C,GACf,IAAK,IAAIW,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFA9B,KAAK2E,SAAShD,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACP3C,IAKb6F,MAAS,SAASjD,GAChB,IAAK,IAAIa,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAIvC,EAASsC,EAAMQ,WACnB,GAAoB,UAAhB9C,EAAOE,KAAkB,CAC3B,IAAIuF,EAASzF,EAAOb,IACpB0D,EAAcP,GAEhB,OAAOmD,GAMX,MAAM,IAAIrG,MAAM,0BAGlBsG,cAAe,SAAS1C,EAAUf,EAAYE,GAa5C,OAZAxB,KAAKnB,SAAW,CACdvB,SAAU8C,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBxB,KAAKzB,SAGPyB,KAAKxB,SAvqBPG,GA0qBOK,IAQJnC,GAOsBmI,EAAOnI,SAGtC,IACEoI,mBAAqBrI,EACrB,MAAOsI,GAUPC,SAAS,IAAK,yBAAdA,CAAwCvI,gCCptB7BwI,EAAiB,oCCsEjBC,EAAkBC,gBAC7B,IAGEC,EAAU,SAACjH,EAAsBkH,UAC3BA,EAAOjG,UACR,gBAEA,sBAEA,kBAEA,gCACSjB,EAAUkH,EAAOC,uBAGvB,IAAIhH,iCCnFViH,EAAqB,eACnBvH,EAAUwH,aAAWN,WACX1G,IAAZR,QACI,IAAIM,MAAM,8DAEXN,GCRIyH,EAAe,CAAC,IAAK,KAErBC,EAAY,2BAAG,WAAOC,EAAa9C,uGAGrB+C,MAAMD,iBAAvBE,kBACsBA,EAASC,qBAE/BlF,SAFEmF,UAEiBC,QAAO,SAACC,UAAcA,EAAKpD,OAASA,KACvDqD,EAAOtF,EAAOyB,OAAS,EACvB8D,EAAgBC,KAAKC,MAAMD,KAAKE,SAAWb,EAAapD,0BAEvD,CACL6D,KAAAA,EACAK,QAASd,EAAaU,GACtBK,SAAS,gKAbU,GAoBZC,EAAc,2BAAG,WAC5BF,EACA1D,EACA8C,0FAGQe,EAAY,CAChB7D,KAAAA,EACA8D,KAAkB,MAAZJ,EAAkB,EAAI,EAC5BK,KAAkB,MAAZL,EAAkB,EAAI,YAGPX,MAAMD,EAAK,CAChCvH,OAAQ,OACRyI,QAAS,gBAAkB,qCAC3BC,KAAMC,KAAKC,UAAUN,mBAHjBb,kBAMOA,EAASC,iOAlBC,GCdrBmB,EAAYC,EAAMC,YACtB,SAACC,EAAuBC,UACtBH,EAAMI,oBAAoBD,GAAK,iBAAO,CAAEE,QAASH,EAAMG,YAEhDL,gBAACM,gBAAUJ,EAAMK,aAIfC,EAAS,gBAAGD,IAAAA,SAAU5E,IAAAA,KAAM8E,IAAAA,QACjC3J,EAAU4J,MACUC,WAAiB,CACzCC,UAAW,GACXtB,SAAS,EACTxF,OAAO,EACPuF,QAAS,IACTL,MAAM,IALD/H,OAAO4J,SAQ2B/J,EAAQG,MAAM6J,OACjDrC,EAASV,QADPgD,eAAUC,iBAAYC,kBAGxBC,EAAmB,SAAC7B,OAClBuB,EAAYZ,EAAMmB,SAASC,IAAIb,GAAU,SAACc,MAC1CA,EAAMnB,MAAMvE,OAAS0D,SAChBgC,KAIXR,GAAS,SAACS,eAEHA,GACHV,UAAAA,eAKNW,aAAU,uCACQ,iHAE6B/C,EAAaC,EAAK9C,UAAnDqD,aAAAA,KAAMM,IAAAA,QAEd4B,EAFuB7B,IAAAA,SAIvBwB,GAAS,SAACS,eAEHA,GACHtC,KAAAA,EACAK,QAAAA,EACAC,QAAAA,yDAIJuB,GAAS,SAACS,eACIA,GAAWxH,OAAO,EAAMwF,SAAS,qHAInDkC,KACC,CAAC7F,EAAM7E,EAAQG,MAAM6J,SAUnB7J,EAAMqI,SAAYrI,EAAM+H,KAG3BgB,gBAACD,GAAUI,IAAKM,EAASJ,mCAXT,qGAEDd,EAAetI,EAAMoI,QAAS1D,EAAM8C,wNAUhDxH,EAAM2J,WAJ+B,MAStCa,EAAU,gBACdlB,IAAAA,SACA5E,IAAAA,YAKOqE,EAAM0B,aACX1B,gBAACM,iBACD,CAAE3E,KAAAA,GACFqE,gBAACM,gBAAUC,KAIfkB,EAAQlG,YAAc,iBAEtBiF,EAAOiB,QAAUA,EC3FjB,IAAM1B,EAAYC,EAAMC,YACtB,SAACC,EAAuBC,UACtBH,EAAMI,oBAAoBD,GAAK,iBAAO,CAAEE,QAASH,EAAMG,YAEhDL,gBAACM,gBAAUJ,EAAMK,aAIfoB,EAAc,gBACzBpB,IAAAA,SACA5E,IAAAA,KACA8E,IAAAA,YACAmB,aAAAA,gBAEM9K,EAAU4J,MACUC,WAAiB,CACzCC,UAAW,GACXtB,SAAS,EACTxF,OAAO,EACPuF,QAAS,IACTL,MAAM,IALD/H,OAAO4J,SAQ2B/J,EAAQG,MAAM6J,OACjDrC,EAASV,QADPgD,eAAUC,iBAAYC,kBAGxBC,EAAmB,SAAC7B,OAClBuB,EAAYZ,EAAMmB,SAASC,IAAIb,GAAU,SAACc,MAC1CA,EAAMnB,MAAMvE,OAAS0D,SAChBgC,KAIXR,GAAS,SAACS,eAEHA,GACHV,UAAAA,eAKNW,aAAU,uCACQ,mHAEeM,EAAYC,QAAQnG,aAAzCoG,UAGFH,GAAgC,OAAhBG,mBAClBC,QAAQC,IAAI,gBACZf,EAAiBa,EAAY1C,SAE7BwB,GAAS,SAACS,eAEHA,EACAS,qCAIPC,QAAQC,IAAI,2BAC6BzD,EAAaC,EAAK9C,kBAAnDqD,aAAAA,KAAMM,IAAAA,QAEd4B,EAFuB7B,IAAAA,SAIvBwB,GAAS,SAACS,eAEHA,GACHtC,KAAAA,EACAK,QAAAA,EACAC,QAAAA,iBAKEuC,EAAYK,QAAQvG,EAAM,CAC9BqD,KAAAA,EACAK,QAAAA,EACAC,QAAAA,8DAIJuB,GAAS,SAACS,eACIA,GAAWxH,OAAO,EAAMwF,SAAS,qHAInDkC,KACC,CAAC7F,EAAM7E,EAAQG,MAAM6J,SAUnB7J,EAAMqI,SAAYrI,EAAM+H,KAG3BgB,gBAACD,GAAUI,IAAKM,EAASJ,mCAXT,qGAEDd,EAAetI,EAAMoI,QAAS1D,EAAM8C,wNAUhDxH,EAAM2J,WAJ+B,MAStCa,EAAU,gBACdlB,IAAAA,SACA5E,IAAAA,YAKOqE,EAAM0B,aACX1B,gBAACM,iBACD,CAAE3E,KAAAA,GACFqE,gBAACM,gBAAUC,KAIfkB,EAAQlG,YAAc,iBAEtBoG,EAAYF,QAAUA,MCnITU,EAAe,SAACrB,OACrBsB,EAAMC,0BAEL3M,OAAOyG,KAAK2E,GAChBhC,QACC,SAAAzC,eAAuB/E,IAAhBwJ,EAAOzE,IAAsByE,EAAOzE,IAAwB,OAAhByE,EAAOzE,MAE3D+E,KAAI,SAAA/E,UAAO+F,EAAI/F,GAAO,IAAM+F,EAAItB,EAAOzE,OACvCiG,KAAK,MCLGC,EAAW,2BAAG,WACzB9D,EACA9C,EACAmF,4FAGQ0B,EAAQL,EAAa,CACzBxG,KAAMA,EACN8G,QAAS3B,EAAO2B,QAChBC,OAAQ5B,EAAO4B,OACfC,WAAY7B,EAAO6B,sBAGEjE,MAASD,MAAO+D,EAAS,CAC9CtL,OAAQ,sBADJyH,kBAIoBA,EAASC,uCAG5B,CACLgE,QAJMA,SAAAA,QAKN5D,KAJW4D,EAAQzH,OAAS,EAK5BmE,SAAS,kKAvBS,GCwCXuD,EAAgB5E,gBAC3B,IAGEC,EAAU,SAACjH,EAAoBkH,UACzBA,EAAOjG,UACR,gBAEA,8BACSjB,EAAUkH,EAAOC,uBAGvB,IAAIhH,qFC/CyB,gBAAGmJ,IAAAA,SAAU5E,IAAAA,KAC5C1E,EAAUyJ,IAAVzJ,aACK6L,WAAQ,kBAAqC,IAA/B7L,EAAM8L,MAAMC,QAAQrH,KAAc,CAC3D1E,EAAM8L,MACNpH,IAMKqE,gBAACM,gBAAUC,GAFA,yBCRiC,gBAAGA,IAAAA,SAAU5E,IAAAA,KACxD1E,EAAUyJ,IAAVzJ,MAEFgM,EAASH,WACb,kBAAM7L,EAAMiM,QAAQpE,QAAO,SAACC,UAAcA,EAAKpD,OAASA,OACxD,CAAC1E,EAAMiM,QAASvH,IAEZwH,EAAeL,WAAQ,kBAAMG,EAAO9H,OAAS,IAAG,CAAC8H,WAIlDE,EAEEnD,gBAACM,gBAAUC,EALL4C,EAAeF,EAAO,GAAGG,KAAO,KAGnB,qDFwCiC,gBAC3D7C,IAAAA,SACA5E,IAAAA,KACA0H,IAAAA,MAEMvM,EAAU4J,MAOU4C,aAAWpF,EAAS,CAC5CoB,SAAS,EACTxF,OAAO,EACPgH,OARa,CACbnF,KAAAA,EACA0H,MAAAA,KAGKpM,OAAOsM,SAMmBzM,EAAQG,MAAM6J,OAAvCC,IAAAA,SAAUC,IAAAA,WAEZ3J,EAAQyL,WAAQ,iBAAO,CAAE7L,MAAAA,EAAOsM,SAAAA,KAAa,CAACtM,EAAOsM,WAE3DhC,aAAU,eACJiC,GAAS,EACPC,6BAAa,oGAGThF,EAASV,MAAUgD,MAAYC,gBAE/BxB,EAAY,CAChB7D,KAAAA,EACA0H,MAAAA,YAGI3E,MAAMD,EAAK,CACfvH,OAAQ,OACRyI,QAAS,gBAAkB,qCAC3BC,KAAMC,KAAKC,UAAUN,YAGvBkE,OAAO9B,aAAaM,QAAQ,uBAAwBmB,GAE/CG,GACHD,EAAS,CACPrL,KAAM,YACNkG,QAAS,CAAEuF,SAAS,EAAMrE,SAAS,qDAIvCiE,EAAS,CACPrL,KAAM,kBACNkG,QAAS,CAAEkB,SAAS,EAAOxF,OAAO,0HAMnB4J,OAAO9B,aAAaE,QAAQ,0BAG5BuB,GACnBI,IAEK,WACLD,GAAS,KAEV,CAACH,IAGFrD,gBAAC6C,EAAce,UAASvM,MAAOA,GAAQkJ,oBGtHI,gBAAGA,IAAAA,SAAU5E,IAAAA,KAAMmF,IAAAA,OAC1DhK,EAAU4J,MACUC,WAAiB,CACzCrB,SAAS,EACTxF,OAAO,EACPkF,MAAM,IAHD/H,OAAO4J,SAM2B/J,EAAQG,MAAM6J,OACjDrC,EAASV,QADPgD,eAAUC,iBAAYC,yBAG9BM,aAAU,uCACQ,+GAEoBgB,EAAY9D,EAAK9C,EAAMmF,UAA/C9B,aAAAA,KAAMM,IAAAA,QAEduB,GAAS,SAACS,eAEHA,GACHtC,KAAAA,EACAM,QAAAA,uDAIJuB,GAAS,SAACS,eACIA,GAAWxH,OAAO,EAAMwF,SAAS,oHAInDkC,KACC,CAAC7F,EAAM7E,EAAQG,MAAM6J,SAGnB7J,EAAM+H,KAEJgB,gBAACM,gBAAUC,GAFM,2BC9B+B,gBACvDA,IAAAA,SACA5E,IAAAA,KACAmF,IAAAA,WACAc,aAAAA,gBAEM9K,EAAU4J,MACUC,WAAiB,CACzCrB,SAAS,EACTxF,OAAO,EACPkF,MAAM,IAHD/H,OAAO4J,SAM2B/J,EAAQG,MAAM6J,OACjDrC,EAASV,QADPgD,eAAUC,iBAAYC,yBAG9BM,aAAU,uCACQ,iHAEeM,EAAYC,QAAQnG,aAAzCoG,UAGFH,GAAgC,OAAhBG,kBAClBC,QAAQC,IAAI,oBACZpB,GAAS,SAACS,eAEHA,GACHtC,KAAM6E,EAAQ/C,EAAQiB,EAAYjB,QAClCxB,SAAS,+CAImBiD,EAAY9D,EAAK9C,EAAMmF,kBAA/C9B,aAAAA,KAAMM,IAAAA,QACd0C,QAAQC,IAAI,kBACZpB,GAAS,SAACS,eAEHA,GACHtC,KAAAA,EACAM,QAAAA,iBAIEuC,EAAYK,QAAQvG,EAAM,CAC9BqD,KAAAA,EACAM,QAAAA,EACAwB,OAAAA,8DAIJD,GAAS,SAACS,eACIA,GAAWxH,OAAO,EAAMwF,SAAS,qHAInDkC,KACC,CAAC7F,EAAM7E,EAAQG,MAAM6J,SAGnB7J,EAAM+H,KAEJgB,gBAACM,gBAAUC,GAFM,yDXmBuC,gBAC/DA,IAAAA,SACAQ,IAAAA,SACAE,IAAAA,OACAD,IAAAA,eACA8C,SAAAA,aAAW/F,MASeuF,aAAWpF,EAAS,CAC5CoB,SAAS,EACTxF,OAAO,EACPiJ,MAAO,GACPG,QAAS,GACTpC,OAZa,CACbC,SAAAA,EACAE,OAAAA,EACAD,WAAAA,EACA8C,SAAAA,KAGK7M,OAAOsM,OAQRlM,EAAQyL,WAAQ,iBAAO,CAAE7L,MAAAA,EAAOsM,SAAAA,KAAa,CAACtM,EAAOsM,WAG3DhC,aAAU,eACJiC,GAAS,EAEPO,6BAAe,oGAGb9M,EAAM8L,MAAM5H,OAAS,2DAGnBsD,EAASqF,MAAY/C,MAAYC,MAAcC,oBAG9BvC,MAAMD,iBAAvBE,kBACkBA,EAASC,iBAG3BwE,SAHEL,MAGW3B,KAAI,SAACrC,UAA2BA,EAAKpD,QAGnD6H,0BACHD,EAAS,CACPrL,KAAM,YACNkG,QAAS,CACP2E,MAAOK,EACP9D,SAAS,eAIPuC,EAAYK,QAAQ,QAASkB,6DAGrCG,EAAS,CACPrL,KAAM,kBACNkG,QAAS,CAAEkB,SAAS,EAAOxF,OAAO,oHAKlCkK,6BAAiB,oGAGf/M,EAAMiM,QAAQ/H,OAAS,2DAGrBsD,EAASqF,MAAY/C,MAAYC,MAAcC,sBAG9BvC,MAAMD,iBAAvBE,kBACoBA,EAASC,iBAA3BsE,SAAAA,QAGHM,0BACHD,EAAS,CACPrL,KAAM,cACNkG,QAAS,CAAE8E,QAAAA,EAAS5D,SAAS,eAGzBuC,EAAYK,QAAQ,UAAWgB,6DAGvCK,EAAS,CACPrL,KAAM,oBACNkG,QAAS,CAAEkB,SAAS,EAAOxF,OAAO,2HAIxCiK,IACAC,IACO,WACLR,GAAS,KAEV,IAGDxD,gBAAChC,EAAgB4F,UAASvM,MAAOA,GAC9BkJ,sBYpLkB,SAAC5E,OAClB7E,EAAU4J,MACUC,WAAiB,CACzCrB,SAAS,EACTxF,OAAO,EACPkF,MAAM,EACNK,QAAS,MAJJpI,OAAO4J,SAM2B/J,EAAQG,MAAM6J,OACjDrC,EAASV,QADPgD,eAAUC,iBAAYC,yBAG9BM,aAAU,uCACQ,iHAE6B/C,EAAaC,EAAK9C,UAAnDqD,aAAAA,KAAMM,IAAAA,QAASD,IAAAA,QAEvBwB,GAAS,SAACS,eAEHA,GACHtC,KAAAA,EACAK,QAAAA,EACAC,QAAAA,yDAIJuB,GAAS,SAACS,eACIA,GAAWxH,OAAO,EAAMwF,SAAS,qHAInDkC,KACC,CAAC7F,EAAM7E,EAAQG,MAAM6J,SAUjB,CACL9B,KAAM/H,EAAM+H,KACZlF,MAAO7C,EAAM6C,MACbwF,QAASrI,EAAMqI,QACfD,QAASpI,EAAMoI,QACfgB,mCAbgB,qGAEDd,EAAetI,EAAMoI,QAAS1D,EAAM8C,gPClCzB,SAAC9C,EAAciG,YAAAA,IAAAA,GAAwB,OAC7D9K,EAAU4J,MACUC,WAAiB,CACzCrB,SAAS,EACTxF,OAAO,EACPkF,MAAM,EACNK,QAAS,MAJJpI,OAAO4J,SAM2B/J,EAAQG,MAAM6J,OACjDrC,EAASV,QADPgD,eAAUC,iBAAYC,yBAG9BM,aAAU,uCACQ,mHAEeM,EAAYC,QAAQnG,aAAzCoG,UAGFH,GAAgC,OAAhBG,kBAClBC,QAAQC,IAAI,mBACZpB,GAAS,SAACS,eAEHA,EACAS,oCAIPC,QAAQC,IAAI,8BAC6BzD,EAAaC,EAAK9C,kBAAnDqD,aAAAA,KAAMM,IAAAA,QAASD,IAAAA,QACvBwB,GAAS,SAACS,eAEHA,GACHtC,KAAAA,EACAK,QAAAA,EACAC,QAAAA,iBAIEuC,EAAYK,QAAQvG,EAAM,CAC9BqD,KAAAA,EACAK,QAAAA,EACAC,QAAAA,8DAIJuB,GAAS,SAACS,eACIA,GAAWxH,OAAO,EAAMwF,SAAS,qHAInDkC,KACC,CAAC7F,EAAM7E,EAAQG,MAAM6J,SAUjB,CACL9B,KAAM/H,EAAM+H,KACZlF,MAAO7C,EAAM6C,MACbwF,QAASrI,EAAMqI,QACfD,QAASpI,EAAMoI,QACfgB,mCAbgB,qGAEDd,EAAetI,EAAMoI,QAAS1D,EAAM8C,yOC9DhC,SAAC9C,OACd1E,EAAUyJ,IAAVzJ,YAGD,CACL+H,MAA+B,IAHnB8D,WAAQ,kBAAM7L,EAAM8L,QAAO,CAAC9L,EAAM8L,QAGlCC,QAAQrH,2BCLK,SAACA,OACpB1E,EAAUyJ,IAAVzJ,MAEFgM,EAASH,WACb,kBAAM7L,EAAMiM,QAAQpE,QAAO,SAACC,UAAcA,EAAKpD,OAASA,OACxD,CAAC1E,EAAMiM,QAASvH,IAEZwH,EAAeL,WAAQ,kBAAMG,EAAO9H,OAAS,IAAG,CAAC8H,UAEhD,CACLjE,KAAMmE,EACNC,KAAMD,EAAeF,EAAO,GAAGG,KAAO,wBCJhB,SACxBzH,EACAmF,OAEMhK,EAAU4J,MACUC,WAAiB,CACzCrB,SAAS,EACTxF,OAAO,EACPkF,MAAM,IAHD/H,OAAO4J,SAK2B/J,EAAQG,MAAM6J,OACjDrC,EAASV,QADPgD,eAAUC,iBAAYC,yBAG9BM,aAAU,uCACQ,+GAEoBgB,EAAY9D,EAAK9C,EAAMmF,UAA/C9B,aAAAA,KAAMM,IAAAA,QAEduB,GAAS,SAACS,eAEHA,GACHtC,KAAAA,EACAM,QAAAA,uDAIJuB,GAAS,SAACS,eACIA,GAAWxH,OAAO,EAAMwF,SAAS,oHAInDkC,KACC,CAAC7F,EAAM7E,EAAQG,MAAM6J,SAEjB,CACL9B,KAAM/H,EAAM+H,KACZlF,MAAO7C,EAAM6C,MACbwF,QAASrI,EAAMqI,kCCrCY,SAC7B3D,EACAmF,EACAc,YAAAA,IAAAA,GAAwB,OAElB9K,EAAU4J,MACUC,WAAiB,CACzCrB,SAAS,EACTxF,OAAO,EACPkF,MAAM,IAHD/H,OAAO4J,SAK2B/J,EAAQG,MAAM6J,OACjDrC,EAASV,QADPgD,eAAUC,iBAAYC,yBAG9BM,aAAU,uCACQ,iHAEeM,EAAYC,QAAQnG,aAAzCoG,UAEFH,GAAgC,OAAhBG,kBAClBC,QAAQC,IAAI,oBACZpB,GAAS,SAACS,eAEHA,GACHtC,KAAM6E,EAAQ/C,EAAQiB,EAAYjB,QAClCxB,SAAS,+CAImBiD,EAAY9D,EAAK9C,EAAMmF,kBAA/C9B,aAAAA,KAAMM,IAAAA,QACd0C,QAAQC,IAAI,qBACZpB,GAAS,SAACS,eAEHA,GACHtC,KAAAA,EACAM,QAAAA,iBAKEuC,EAAYK,QAAQvG,EAAM,CAC9BqD,KAAAA,EACAM,QAAAA,EACAwB,OAAAA,8DAIJD,GAAS,SAACS,eACIA,GAAWxH,OAAO,EAAMwF,SAAS,qHAInDkC,KACC,CAAC7F,EAAM7E,EAAQG,MAAM6J,SAEjB,CACL9B,KAAM/H,EAAM+H,KACZlF,MAAO7C,EAAM6C,MACbwF,QAASrI,EAAMqI"}