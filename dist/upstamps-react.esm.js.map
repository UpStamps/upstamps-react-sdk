{"version":3,"file":"upstamps-react.esm.js","sources":["../src/Context.tsx","../src/useFlag.tsx","../src/Flag.tsx"],"sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\n\nexport interface UpStampsConfigParams {\n  clientId: string;\n  envKey: string;\n  projectKey: string;\n}\n\nexport interface UpStampsState {\n  loading: boolean;\n  error: boolean;\n  flags: Array<string>;\n  params: UpStampsConfigParams;\n}\n\nexport interface UpStampsContextState {\n  state: UpStampsState;\n}\n\nexport interface UpStampsProviderProps extends UpStampsConfigParams {\n  children: React.ReactNode;\n}\n\nexport const UpStampsContext = createContext<UpStampsContextState>(\n  {} as UpStampsContextState\n);\n\nconst apiUrl: string = \"https://services.upstamps.com/api/flags\";\n\nexport const UpStampsProvider: React.FC<UpStampsProviderProps> = ({\n  children,\n  clientId,\n  envKey,\n  projectKey,\n}) => {\n  const params = {\n    clientId,\n    envKey,\n    projectKey,\n  };\n\n  const [state, dispatch] = useState({\n    loading: true,\n    error: false,\n    flags: [],\n    params,\n  });\n\n  const [contextValue, setContextValue] = useState({\n    state,\n    dispatch,\n  });\n\n  useEffect(() => {\n    const onFetchFlags = async () => {\n      try {\n        //If the flags are collected, do not fetch again\n        if (state.flags.length > 0) return;\n        //Service Url\n        const url = `${apiUrl}/${clientId}/${projectKey}/${envKey}`;\n        //Response with the all the flags\n        const response = await fetch(url);\n        const { flags } = await response.json();\n        //Filters flags a creates a simple array\n        const data = flags.map((item: { name: string }) => item.name);\n        //Updates the state with the flags\n        dispatch(prevState => {\n          return { ...prevState, flags: data, loading: false };\n        });\n      } catch (e) {\n        dispatch(prevState => {\n          return { ...prevState, error: true, loading: false };\n        });\n      }\n    };\n    onFetchFlags();\n  }, [state.flags, clientId, envKey, projectKey]);\n\n  useEffect(() => {\n    setContextValue({ ...contextValue, state });\n  }, [state]);\n\n  return (\n    <UpStampsContext.Provider value={contextValue}>\n      {children}\n    </UpStampsContext.Provider>\n  );\n};\n","import { useContext, useMemo } from \"react\";\nimport { UpStampsContext } from \"./Context\";\n\nexport const useFlag = (name: string) => {\n  const { state } = useContext(UpStampsContext);\n  const flags = useMemo(() => state.flags, [state.flags]);\n\n  return {\n    show: flags.indexOf(name) !== -1,\n  } as const;\n};\n","import React, { Fragment, useContext } from \"react\";\nimport { UpStampsContext } from \"./Context\";\n\nexport interface FlagProps {\n  children: React.ReactNode;\n  name: string;\n}\n\nexport const Flag: React.FC<FlagProps> = ({ children, name }) => {\n  const { state } = useContext(UpStampsContext);\n  const show = state.flags.indexOf(name) !== -1;\n\n  //Hide the feature\n  if (!show) return null;\n\n  return <Fragment>{children}</Fragment>;\n};\n"],"names":["UpStampsContext","createContext","apiUrl","UpStampsProvider","_a","children","clientId","envKey","projectKey","params","_b","state","dispatch","_c","contextValue","setContextValue","useEffect","onFetchFlags","flags","length","url","fetch","response","json","data_1","map","item","name","prevState","loading","error","React","Provider","value","useFlag","useMemo","show","indexOf","Flag","Fragment"],"mappings":";;;IAuBaA,eAAe;AAAA;AAAGC,aAAa,CAC1C,EAD0C;AAI5C,IAAMC,MAAM,GAAW,yCAAvB;IAEaC,gBAAgB,GAAoC,SAApDA,gBAAoD,CAACC,EAAD;MAC/DC;MACAC;MACAC;MACAC;AAEA,MAAMC,MAAM,GAAG;AACbH,IAAAA,QAAQ,UADK;AAEbC,IAAAA,MAAM,QAFO;AAGbC,IAAAA,UAAU;AAHG,GAAf;;AAMM,MAAAE;;;;;IAAA;AAAA,MAACC,aAAD;AAAA,MAAQC,gBAAR;;AAOA,MAAAC;;;IAAA;AAAA,MAACC,oBAAD;AAAA,MAAeC,uBAAf;;AAKNC,EAAAA,SAAS,CAAC;AACR,QAAMC,YAAY,GAAG,SAAfA,YAAe;;;;;;;;;AAGjB,kBAAIN,KAAK,CAACO,KAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA4B;;eAAA;AAEtBC,cAAAA,GAAG,GAAMlB,MAAM,MAAN,GAAUI,QAAV,MAAA,GAAsBE,UAAtB,MAAA,GAAoCD,MAA7C;AAEW;;gBAAMc,KAAK,CAACD,GAAD,EAAX;;;AAAXE,cAAAA,QAAQ,GAAGlB,OAAA,EAAX;AACY;;gBAAMkB,QAAQ,CAACC,IAAT,GAAN;;;AAAVL,cAAAA,KAAK,GAAKd,OAAA,EAAA,MAAV;AAEFoB,cAAAA,SAAON,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD;AAA4B,uBAAAA,IAAI,CAACC,IAAL;AAAS,eAA/C,CAAP;;AAENf,cAAAA,QAAQ,CAAC,UAAAgB,SAAA;AACP,6CAAYA;AAAWV,kBAAAA,KAAK,EAAEM;AAAMK,kBAAAA,OAAO,EAAE;kBAA7C;AACD,eAFO,CAAR;;;;;;;AAIAjB,cAAAA,QAAQ,CAAC,UAAAgB,SAAA;AACP,6CAAYA;AAAWE,kBAAAA,KAAK,EAAE;AAAMD,kBAAAA,OAAO,EAAE;kBAA7C;AACD,eAFO,CAAR;;;;;;;;;;;;AAIH,KApBD;;AAqBAZ,IAAAA,YAAY;AACb,GAvBQ,EAuBN,CAACN,KAAK,CAACO,KAAP,EAAcZ,QAAd,EAAwBC,MAAxB,EAAgCC,UAAhC,CAvBM,CAAT;AAyBAQ,EAAAA,SAAS,CAAC;AACRD,IAAAA,eAAe,uBAAMD;AAAcH,MAAAA,KAAK;MAAzB,CAAf;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,SACEoB,mBAAA,CAAC/B,eAAe,CAACgC,QAAjB;AAA0BC,IAAAA,KAAK,EAAEnB;GAAjC,EACGT,QADH,CADF;AAKD;;ICpFY6B,OAAO,GAAG,SAAVA,OAAU,CAACP,IAAD;AACb,MAAAhB,yCAAA;AACR,MAAMO,KAAK,GAAGiB,OAAO,CAAC;AAAM,WAAAxB,KAAK,CAACO,KAAN;AAAW,GAAlB,EAAoB,CAACP,KAAK,CAACO,KAAP,CAApB,CAArB;AAEA,SAAO;AACLkB,IAAAA,IAAI,EAAElB,KAAK,CAACmB,OAAN,CAAcV,IAAd,MAAwB,CAAC;AAD1B,GAAP;AAGD,CAPM;;ICKMW,IAAI,GAAwB,SAA5BA,IAA4B,CAAClC,EAAD;MAAGC;MAAUsB;AAC5C,MAAAhB,yCAAA;AACR,MAAMyB,IAAI,GAAGzB,KAAK,CAACO,KAAN,CAAYmB,OAAZ,CAAoBV,IAApB,MAA8B,CAAC,CAA5C;;AAGA,MAAI,CAACS,IAAL,EAAW,OAAO,IAAP;AAEX,SAAOL,mBAAA,CAACQ,QAAD,MAAA,EAAWlC,QAAX,CAAP;AACD,CARM;;;;"}